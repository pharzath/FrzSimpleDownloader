@page "/Downloader"
@using FrzSimpleDownloader.Services

<MudCard Elevation="2" Class="m-4">
	<MudCardHeader>
		Download Video Content Files from Video list on :
		<MudText Typo="Typo.caption">
			@textFileUrl
		</MudText>
	</MudCardHeader>
	<MudCardContent>
		<MudText>
			Downlods will be uploaded to :
		</MudText>
		<MudText>
			"https://s3.ir-thr-at1.arvanstorage.ir/mp4"
		</MudText>
		<MudProgressLinear @ref="progress" Min="0" Size="Size.Large" Color="Color.Warning" Striped="true"></MudProgressLinear>
		<MudText Typo="Typo.body1">
			@Title
		</MudText>
		<MudText Typo="Typo.body2" Color="Color.Primary">
			@Msg
		</MudText>

	</MudCardContent>
	<MudCardActions>
		<MudButton Size="Size.Medium" Color="Color.Warning" OnClick="GetDownlaodeList">
			Get Videos From List 
		</MudButton>

	</MudCardActions>
</MudCard>


<MudPaper Elevation="1">

</MudPaper>
@code {
	MudProgressLinear? progress;
	[Inject] ArvanService Arvan { get; set; }
	string Title;
	string Msg;
	// URL of the text file containing video IDs
	string textFileUrl = "https://vocavers.cdn-havesh.ir/VideoIdsToDownload.txt";

	private async Task GetDownlaodeList()
	{

		// URL pattern for video files
		var videoUrlPattern = "https://v.cdn-wordup.com/mp4/{0}.mp4";
		try
		{
			using HttpClient httpClient = new HttpClient();
			// Download the text file
			var textFileContent = await httpClient.GetStringAsync(textFileUrl);

			// Split the text file content into lines
			var lines = textFileContent.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
			//var lines = new[] { "166228", "149065" };
			progress.Max = lines.Length;
			// Download video files for each ID
			var counter = 0;
			if (File.Exists("VideoDownloadCounter.txt"))
			{
				var count = await File.ReadAllTextAsync("VideoDownloadCounter.txt");
				counter = Convert.ToInt32(count);
			}

			foreach (var line in lines.Skip(counter))
			{
				if (!int.TryParse(line, out var videoId))
					continue;

				var videoUrl = string.Format(videoUrlPattern, videoId);

				// Download and save the video file
				var videoBytes = await httpClient.GetByteArrayAsync(videoUrl);
				var videoFileName = $"mp4/{videoId}.mp4";
				Console.WriteLine($"Downloaded {videoFileName}");

				//await File.WriteAllBytesAsync(videoFileName, videoBytes);
				Arvan.UploadByteArrayToS3(videoBytes , ArvanService.BUCKET_NAME , videoFileName);
				Console.WriteLine($"Uploaded {videoFileName}");
				progress.Value = ++counter;
				
				Title = "Total Downlaod :  " + counter + " of " + lines.Length;
				Msg = "Downloaded : " + videoFileName;

				StateHasChanged();

				await File.WriteAllTextAsync("VideoDownloadCounter.txt",counter.ToString());
				await Task.Delay(1);
			}

			Console.WriteLine("Download completed.");
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error: {ex.Message}");
		}
	}
}

